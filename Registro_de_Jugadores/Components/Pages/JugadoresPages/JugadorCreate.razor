@page "/jugadores/Create"

@inject JugadoresServices jugadoresService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>
<EditForm Model="jugador" OnValidSubmit="Guardar" FormName="Jugadores">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class=" card-header text-center">
                <h5 class="card-title">Crear Jugador</h5>
            </div>
        </div>

        <div class="card-body">

            @*Nombre*@
            <div class="mb-3">
                <label class="col-form-label"><strong>Nombres</strong></label>
                <InputText class="form-control" @bind-Value="jugador.Nombre"></InputText>
                <label class="form-label"><strong>@Mensaje</strong></label>
                <ValidationMessage For="(() => jugador.Nombre)" />
            </div>

            @*Partida*@
            <div class="mb-3">
                <label class="form-label"><strong>Partidas</strong></label>
                <InputNumber class="form-control" @bind-Value="jugador.Partidas"></InputNumber>
                <ValidationMessage For="(() => jugador.Partidas)" />
            </div>
        </div>

        @*footer*@
        <div class="card-footer text-center mt-2">
            <a href="/jugadores/index" class="btn btn-secondary"><span class="bi bi-arrow-left"></span>Volver</a>
            <button type="submit" class="btn btn-primary bi bi-floppy"><span class="bi bi-save>"></span>Guardar</button>
        </div>


    </div>

</EditForm>


@code {
    public Jugadores jugador { get; set; } = new Jugadores();
    public string Mensaje { get; set; } = string.Empty;
    public List<Jugadores> ListaJugadores { get; set; } = new List<Jugadores>();

    protected override async Task OnInitializedAsync()
    {
        ListaJugadores = await jugadoresService.Listar(j => j.JugadorId > 0);
    }

    public async Task Guardar()
    {
        var existe = await jugadoresService.Existe(jugador.Nombre);

        if (existe)
        {
            Mensaje = "Ya existe un jugador con ese nombre";
            return;
        }

        var creado = await jugadoresService.Guardar(jugador);

        if(creado)
        {
            navigationManager.NavigateTo("/jugadores");
        }

    }
}
